==484== Memcheck, a memory error detector
==484== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==484== Using Valgrind-3.14.0 and LibVEX; rerun with -h for copyright info
==484== Command: ./42sh
==484== 
--484-- run: /usr/bin/dsymutil "./42sh"



==484== HEAP SUMMARY:
==484==     in use at exit: 112,507 bytes in 2,422 blocks
==484==   total heap usage: 12,056 allocs, 9,634 frees, 1,474,451 bytes allocated
==484== 
==484== 72 bytes in 3 blocks are possibly lost in loss record 113 of 141
==484==    at 0x10010EC8A: calloc (in /Users/bomanyte/.brew/Cellar/valgrind/3.14.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==484==    by 0x10066A846: map_images_nolock (in /usr/lib/libobjc.A.dylib)
==484==    by 0x10067DFE8: objc_object::sidetable_retainCount() (in /usr/lib/libobjc.A.dylib)
==484==    by 0x10007D03B: dyld::notifyBatchPartial(dyld_image_states, bool, char const* (*)(dyld_image_states, unsigned int, dyld_image_info const*), bool, bool) (in /usr/lib/dyld)
==484==    by 0x10007D255: dyld::registerObjCNotifiers(void (*)(unsigned int, char const* const*, mach_header const* const*), void (*)(char const*, mach_header const*), void (*)(char const*, mach_header const*)) (in /usr/lib/dyld)
==484==    by 0x1002B800A: _dyld_objc_notify_register (in /usr/lib/system/libdyld.dylib)
==484==    by 0x10066A074: _objc_init (in /usr/lib/libobjc.A.dylib)
==484==    by 0x10024B68D: _os_object_init (in /usr/lib/system/libdispatch.dylib)
==484==    by 0x10024B63A: libdispatch_init (in /usr/lib/system/libdispatch.dylib)
==484==    by 0x10015F9D5: libSystem_initializer (in /usr/lib/libSystem.B.dylib)
==484==    by 0x10008DA1A: ImageLoaderMachO::doModInitFunctions(ImageLoader::LinkContext const&) (in /usr/lib/dyld)
==484==    by 0x10008DC1D: ImageLoaderMachO::doInitialization(ImageLoader::LinkContext const&) (in /usr/lib/dyld)
==484== 
==484== 144 (64 direct, 80 indirect) bytes in 2 blocks are definitely lost in loss record 117 of 141
==484==    at 0x10010E626: malloc (in /Users/bomanyte/.brew/Cellar/valgrind/3.14.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==484==    by 0x100033A8E: ft_dlstnew (in ./42sh)
==484==    by 0x10000BE15: push_to_stack (math_polish_reverse.c:69)
==484==    by 0x10000C5BD: into_reverse_notation (math_polish_reverse.c:245)
==484==    by 0x10000C65B: ariphmetic_calc (math_polish_reverse.c:259)
==484==    by 0x10000AB35: get_math_result (math_tokenize.c:376)
==484==    by 0x10000AA25: ariphmetic_eval (math_tokenize.c:402)
==484==    by 0x10000A48C: do_math_bltn (bltn_math.c:35)
==484==    by 0x100004656: get_deref_math (prs_args.c:62)
==484==    by 0x100004707: get_deref (prs_args.c:78)
==484==    by 0x100004837: arg_sub (prs_args.c:103)
==484==    by 0x1000049A7: prs_args (prs_args.c:134)
==484== 
==484== LEAK SUMMARY:
==484==    definitely lost: 64 bytes in 2 blocks
==484==    indirectly lost: 80 bytes in 4 blocks
==484==      possibly lost: 72 bytes in 3 blocks
==484==    still reachable: 94,432 bytes in 2,261 blocks
==484==         suppressed: 17,859 bytes in 152 blocks
==484== Reachable blocks (those to which a pointer was found) are not shown.
==484== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==484== 
==484== For counts of detected and suppressed errors, rerun with: -v
==484== Use --track-origins=yes to see where uninitialised values come from
==484== ERROR SUMMARY: 9 errors from 6 contexts (suppressed: 11 from 11)
